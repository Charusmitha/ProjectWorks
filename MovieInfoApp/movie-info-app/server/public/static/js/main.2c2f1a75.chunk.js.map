{"version":3,"sources":["Login.jsx","Movie.jsx","MovieList.jsx","MovieDetails.jsx","WatchListMovie.jsx","WatchList.jsx","services.js","App.jsx","serviceWorker.js","index.js"],"names":["Login","_ref","onLoginButton","onLogin","disabled","loggedInUser","react_default","a","createElement","className","onSubmit","name","onChange","e","target","value","Movie","movies","onMoreInfoClick","user","map","movie","key","id","poster_path","src","alt","width","height","title","release_date","popularity","onClick","MovieList","_this","this","props","status","loading","onWatchListButtonClick","onLogoutClick","onKeyDown","onEnter","placeholder","class","onFilter","isEmptyMessage","src_Movie","movieId","onMoreInfoButtonClick","React","Component","MovieDetails","onDetailsToHomeButtonClick","overview","vote_count","vote_average","details","length","href","rel","onAddWatchListClick","addDisabled","onRemoveWatchListClick","removeDisabled","WatchListMovie","list","onRemoveClick","relDate","voteCount","voteAvg","WatchList","onRemoveButtonClick","onWatchListToHomeButtonClick","isWatchListEmptyMessage","src_WatchListMovie","getSearchResults","fetch","concat","catch","err","Promise","reject","error","then","response","ok","json","statusText","getMovieDetails","addToWatchList","method","headers","Headers","content-type","body","JSON","stringify","removeFromWatchList","getWatchListToCheckMoviePresence","getWatchListForUser","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayMovies","searchResults","results","setState","sort","b","handleLogin","handleLoginButton","event","loggedIn","preventDefault","handleKeyPress","keyCode","replace","handleFilter","movieResults","state","Date","handleMoreInfoClick","movieDetails","find","selectedMovie","showDetails","checkMovieInWatchList","tempWatchList","isAddedToWatchList","handleDetailsToHomeClick","handleWatchListToHomeButtonClick","showWatchList","handleAddWatchListClick","handleRemoveWatchListClick","handleRemoveButtonClick","watchList","handleWatchListButtonClick","userWatchList","handleLogoutClick","bind","assertThisInitialized","_this2","src_Login","filter","src_MovieList","watchListButton","src_MovieDetails","src_WatchList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c2f1a75.chunk.js","sourcesContent":["import React from 'react';\n\nconst Login = ( { onLoginButton, onLogin, disabled, loggedInUser } ) => {\n  return (\n  \t<div className=\"login\">\n\t\t<form onSubmit={ onLoginButton }>\n\t    \t<input className=\"loginBox\" name=\"text\" onChange={ (e) => onLogin(e.target.value) } value={ loggedInUser } />\n\t    \t<button className=\"loginButton\" disabled={ disabled } >Login</button>\n\t\t</form>\n\t</div>\n  );\n};\n\nexport default Login;","import React from 'react';\n\nconst Movie = ( { movies, onMoreInfoClick, user } ) => {\n  return (\n\t\t<ol className=\"movieList\">\n\t\t\t{movies.map(movie => \n\t\t\t<li className=\"movie\" key={movie.id}>\n\t\t\t\t<div className=\"moviePoster\">\n\t\t\t\t\t{(movie.poster_path !== null) ? ( \n\t\t\t    \t<img src={\"https://image.tmdb.org/t/p/w500/\"+movie.poster_path} alt=\"Poster not available\" width=\"200\" height=\"300\"/> ) : (\n\t\t\t    \t<img src={\"https://in.bmscdn.com/iedb/movies/images/website/poster/large/the-mighty-mimalayan-man-et00009785-24-03-2017-19-30-07.jpg\"} alt=\"Poster not available\" width=\"200\" height=\"300\"/>\n\t\t\t    \t)\n\t\t\t\t\t}\n\t\t\t    </div>\n\t\t\t    <div className=\"movieInfo\">\n\t\t\t        <p className=\"movieTitle\">{movie.title}</p>\n\t\t\t        <p className=\"movieRelDate\">{movie.release_date}</p>\n\t\t\t        <p className=\"popularity\">Popularity: {movie.popularity}</p>\n\t\t\t        <button className=\"moreInfoButton\" onClick={() => onMoreInfoClick(movie.id, user)}>More Info</button>\n\t\t\t    </div>\n\t\t\t</li>\n\t\t\t)}\n\t\t</ol>\n  );\n};\n\nexport default Movie;","import React from 'react';\nimport Movie from './Movie';\n\nclass MovieList extends React.Component {\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"movieResults\">\n\t\t\t\t<div className=\"mListError\">\n\t\t\t\t\t<p className=\"mListErrorStatus\">{this.props.status}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mListLoading\">\n\t            \t<p className=\"mListLoadingMsg\">{this.props.loading}</p>\n\t            </div>\n\t            <div className=\"userDetails\">\n\t\t            <div className=\"title\">\n\t\t            \t<p className=\"appTitle\">MovieFlixDB</p>\n\t\t            </div>\n\t\t\t\t\t<div className=\"user\">\n\t\t\t\t\t\t<p className=\"username\">{this.props.user}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"displayWatchList\">\n\t\t            \t<button className=\"watchListButton\" onClick={this.props.onWatchListButtonClick}>Watch List</button>\n\t\t            </div>\n\t\t            <div className=\"logout\">\n\t\t\t\t\t\t<button className=\"logoutButton\" onClick={this.props.onLogoutClick}>Logout</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"searchAndFilter\">\n\t\t\t\t\t<div className=\"searchMovie\">\n\t\t              \t<input className=\"searchBox\" name=\"text\" onKeyDown={this.props.onEnter} placeholder=\"Search for your desired movie\" />\n\t\t            </div>\n\t\t\t\t\t<div className={this.props.class}>\n\t\t\t\t\t\tFilter <select value={this.value} onChange={this.props.onFilter} >\n\t\t\t\t\t\t\t\t\t<option value=\"popularity\">Popularity</option>\n\t            \t\t\t\t\t<option value=\"mostRecent\">Newest</option>\n\t            \t\t\t\t\t<option value=\"leastRecent\">Oldest</option>\n\t          \t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t            <div className=\"emptyList\">\n\t            \t<p className=\"emptyListMsg\">{this.props.isEmptyMessage}</p>\n\t            </div>\n\t            <div className=\"movies\">\n\t\t\t\t\t<Movie movies={this.props.movies} onMoreInfoClick={(movieId, user) => this.props.onMoreInfoButtonClick(movieId, user)} user={this.props.user} />\n\t            </div>\n          \t</div>\n\t\t)\n\t}\n}\n\nexport default MovieList;","import React from 'react';\n\nclass MovieDetails extends React.Component {\n\t\n\trender(){\t\n\t\treturn (\t\n\t\t\t<div className=\"movieDetails\">\n\t\t\t\t<div className=\"mDetailsError\">\n\t\t\t\t\t<p className=\"mDetailsErrorStatus\">{this.props.status}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mListLoading\">\n\t\t    \t\t<p className=\"mListLoadingMsg\">{this.props.loading}</p>\n\t\t    \t</div>\n\t\t\t\t<div className=\"moreInfoToHome\">\n\t\t\t\t\t<button className=\"moreInfoToHomeButton\" onClick={this.props.onDetailsToHomeButtonClick} >Home</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"moreInfo\">\n\t\t\t\t\t<div className=\"moreInfoPoster\">\n\t\t          \t\t{(this.props.movie.poster_path !== null) ? ( \n\t\t\t\t    \t<img src={\"https://image.tmdb.org/t/p/w500/\"+this.props.movie.poster_path} alt=\"Poster not available\" width=\"300\" height=\"500\"/> ) : (\n\t\t\t\t    \t<img src={\"https://in.bmscdn.com/iedb/movies/images/website/poster/large/the-mighty-mimalayan-man-et00009785-24-03-2017-19-30-07.jpg\"} alt=\"Poster not available\" width=\"300\" height=\"500\"/> )\n\t\t\t\t\t\t}\n\t\t          \t</div>\n\t\t          \t<div className=\"moreDetails\">\n\t\t\t          \t<div className=\"otherDetails\">\n\t\t\t              <p className=\"mDetailsTitle\">{this.props.movie.title}</p>\n\t\t\t              <p className=\"mDetailsRelDate\">{this.props.movie.release_date}</p>\n\t\t\t              <p className=\"mDetailsOverview\">{this.props.movie.overview}</p>\n\t\t\t              <p className=\"mDetailsVoteCount\">Vote Count: {this.props.movie.vote_count}</p>\n\t\t\t              <p className=\"mDetailsVoteAvg\">Vote Avg: {this.props.movie.vote_average}</p>\n\t\t\t            </div>\n\t\t\t            <div className=\"extraDetails\">\n\t\t\t              {(this.props.details.length !== 0) && \n\t\t\t              <a className=\"trailer\" href={\"https://www.youtube.com/watch?v=\"+this.props.details[0].key} target=\"_blank\" rel=\"noopener noreferrer\">Trailer</a> \n\t\t\t              }\n\t\t\t              <button className={this.props.class} onClick={() => this.props.onAddWatchListClick(this.props.movie.id, this.props.movie.title)} disabled={ this.props.addDisabled }>Add to Watchlist</button>\n\t\t\t              <button className=\"removeWatchList\" onClick={() => this.props.onRemoveWatchListClick(this.props.movie.id)} disabled={ this.props.removeDisabled }>Remove From Watchlist</button>\n\t\t\t            </div>\n\t\t        \t</div>\n\t\t    \t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MovieDetails;","import React from 'react';\n\nconst WatchListMovie = ( { list, onRemoveClick } ) => {\n  return (\n\t\t<ol className=\"movieWatchList\">\n\t\t\t{list.map(movie => \n\t\t\t<li className=\"watchListMovie\" key={movie.id}>\n\t\t\t    <div className=\"details\">\n\t\t\t        <p className=\"wListTitle\">{movie.title}</p>\n\t\t\t        <p className=\"wListRelDate\">{movie.relDate}</p>\n\t\t\t        <p className=\"wListOverview\">{movie.overview}</p>\n\t\t\t        <p className=\"wListVoteCount\">Vote Count: {movie.voteCount}</p>\n\t\t\t        <p className=\"wListVoteAvg\">Vote Avg: {movie.voteAvg}</p>\n\t\t\t        <button className=\"remove\" onClick={() => onRemoveClick(movie.id)}>Remove</button>\n\t\t\t    </div>\n\t\t\t</li>\n\t\t\t)}\n\t\t</ol>\n  );\n};\n\nexport default WatchListMovie;","import React from 'react';\nimport WatchListMovie from './WatchListMovie';\n\nconst WatchList = ( { list, onRemoveButtonClick, onWatchListToHomeButtonClick, isWatchListEmptyMessage, loading, status } ) => {\n  return (\n  \t<div className=\"watchList\">\n  \t\t<div className=\"wListError\">\n\t\t\t<p className=\"wListErrorStatus\">{status}</p>\n\t\t</div>\n  \t\t<div className=\"wListLoading\">\n        \t<p className=\"wListLoadingMsg\">{loading}</p>\n        </div>\n\t    <div className=\"homeButton\">\n\t    \t<button className=\"watchListToHome\" onClick={onWatchListToHomeButtonClick}>Home</button>\n\t    </div>\n\t  \t<div className=\"isListEmpty\">\n\t  \t\t<p className=\"watchListEmpty\">{isWatchListEmptyMessage}</p>\n\t  \t</div>\n\t  \t<div className=\"list\">\n\t\t\t<WatchListMovie list={list} onRemoveClick={(movieId) => onRemoveButtonClick(movieId)} />\n\t\t</div>\n\t</div>\n  );\n};\n\nexport default WatchList;","export const getSearchResults = ( movie ) => {\n  return fetch(`/movies/${movie}`)\n        .catch( err => Promise.reject({ error: 'network', err }) )\n        .then( response => {\n          if(response.ok) {\n            return response.json();\n          }\n          return Promise.reject({ error: 'notFound', err: response.statusText });\n      });\n}\n\nexport const getMovieDetails = ( movieId ) => {\n  return fetch(`/movieDetails/${movieId}`)\n      .catch( err => Promise.reject({ error: 'network', err }) )\n      .then( response => {\n        if( response.ok ) \n        {\n          return response.json();\n        }\n        return Promise.reject({ error: 'unknown', err: response.statusText });\n      })\n}\n\nexport const addToWatchList = ( id, user, title) => {\n  return fetch('/watchList/', {\n          method: 'POST',\n          headers: new Headers({ 'content-type': 'application/json' }),\n          body: JSON.stringify( { id, user, title} )\n          })\n        .catch( err => Promise.reject({ error: 'network', err }) )\n        .then( response => {\n          if(response.ok) {\n            return response.json();\n          }\n          return Promise.reject({ error: 'unknown', err: response.statusText });\n      });\n}\n\nexport const removeFromWatchList = ( id, user ) => {\n  return fetch('/notWatchList/', {\n          method: 'POST',\n          headers: new Headers({ 'content-type': 'application/json' }),\n          body: JSON.stringify( { id, user } )\n          })\n        .catch( err => Promise.reject({ error: 'network', err }) )\n        .then( response => {\n          if(response.ok) {\n            return response.json();\n          }\n          return Promise.reject({ error: 'unknown', err: response.statusText });\n      });\n}\n\nexport const getWatchListToCheckMoviePresence = ( id, user ) => {\n  return fetch(`/watchList/${id}&${user}`)\n        .catch( err => Promise.reject({ error: 'network', err }) )\n        .then( response => {\n          if(response.ok) {\n            return response.json();\n          }\n          return Promise.reject({ error: 'unknown', err: response.statusText });\n          })\n}\n\nexport const getWatchListForUser = ( user ) => {\n  return fetch(`/userWatchList/${user}`)\n        .catch( err => Promise.reject({ error: 'network', err }) )\n        .then( response => {\n          if(response.ok) {\n            return response.json();\n          }\n          return Promise.reject({ error: 'unknown', err: response.statusText });\n          })\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport MovieList from './MovieList';\nimport MovieDetails from './MovieDetails';\nimport WatchList from './WatchList';\nimport { getSearchResults, getMovieDetails, addToWatchList, removeFromWatchList, getWatchListForUser, getWatchListToCheckMoviePresence } from './services';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      movies: [],\n      details: [],\n      watchList: [],\n      selectedMovie: {},\n      showDetails: false,\n      showWatchList: false,\n      loggedIn: false,\n      loggedInUser: '',\n      isAddedToWatchList: false,\n      isEmptyMessage: '',\n      isWatchListEmptyMessage: '',\n      loading: '',\n      status: '',\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLoginButton = this.handleLoginButton.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleMoreInfoClick = this.handleMoreInfoClick.bind(this);\n    this.handleDetailsToHomeClick = this.handleDetailsToHomeClick.bind(this);\n    this.handleAddWatchListClick = this.handleAddWatchListClick.bind(this);\n    this.handleWatchListButtonClick = this.handleWatchListButtonClick.bind(this);\n    this.handleRemoveWatchListClick = this.handleRemoveWatchListClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n  }\n\n  displayMovies = ( movie ) => {\n    getSearchResults( movie )\n      .then(searchResults => {\n        const results = searchResults.results;\n        if(results.length === 0)\n        {\n          this.setState({ movies: [], isEmptyMessage: 'No results found', status: '' })\n        }\n        else\n        {\n          results.sort(function(a,b){\n            return (b.popularity) - (a.popularity)\n          });\n          this.setState({ movies: results, isEmptyMessage: '', status: '' })\n        }\n      })\n      .catch( err => {\n        if(err.error === 'network')\n        {\n          this.setState( { status: 'The network failed, please try again' });\n        }\n        if(err.error === 'notFound')\n        {\n          this.setState( { movies: [], isEmptyMessage: 'No results found', status: ''});\n        }\n      });\n  }\n\n  handleLogin = (user) => {\n    this.setState( { loggedInUser: user, status: '' });\n  }\n\n  handleLoginButton = (event) => {\n    this.setState( { loggedIn: true });\n    event.preventDefault();\n  }\n\n  handleKeyPress = (event) => {\n    if(event.keyCode === 13 && !event.target.value.replace(/\\s/g, '').length)\n    {\n      this.setState( { isEmptyMessage: 'Please enter a movie title' });\n    }\n    else if(event.keyCode === 13 && event.target.value !== '')\n    {\n      this.displayMovies(event.target.value);\n      event.target.value = '';\n    }\n  };\n\n  handleFilter = (event) => {\n    if(event.target.value === 'mostRecent')\n    {\n      let movieResults = this.state.movies;\n      movieResults.sort(function(a,b){\n          return new Date(b.release_date) - new Date(a.release_date)\n      });\n      this.setState({ movies: movieResults })\n\n    }\n    else if(event.target.value === 'leastRecent')\n    {\n      let movieResults = this.state.movies;\n      movieResults.sort(function(a,b){\n          return new Date(a.release_date) - new Date(b.release_date)\n      });\n      this.setState({ movies: movieResults })\n    }\n    else if(event.target.value === 'popularity')\n    {\n      let movieResults = this.state.movies;\n      movieResults.sort(function(a,b){\n          return (b.popularity) - (a.popularity)\n      });\n      this.setState({ movies: movieResults })\n    }\n  }\n\n  handleMoreInfoClick = ( movieId, user ) => {\n    this.setState({ loading: 'Loading...' }, () => {\n      getMovieDetails( movieId )\n        .then( movieDetails => {\n          const details = movieDetails.results;\n          const id = movieDetails.id;\n          const movie = this.state.movies.find(movie => movie.id === id);\n          this.setState({ details: details, selectedMovie: movie, showDetails: true, status: '', loading: ''}); \n          this.checkMovieInWatchList(movie.id);        \n        })\n        .catch( err => {\n          if(err.error === 'network')\n          {\n            this.setState( { status: 'The network failed, please try again', loading: '' });\n          }\n          if(err.error === 'unknown')\n          {\n            this.setState( { status: 'An error occured, please try again', loading: '' });\n          }\n        });  \n    }) \n  };\n\n  checkMovieInWatchList = ( movieId ) => {\n    const user = this.state.loggedInUser;\n    getWatchListToCheckMoviePresence( movieId, user)\n      .then( tempWatchList => {\n        if(tempWatchList.length === 0)\n        {\n          this.setState({ isAddedToWatchList: false});\n        }\n        else \n        {\n          this.setState({ isAddedToWatchList: true});\n        }\n      })\n      .catch( err => {\n        if(err.error === 'network')\n        {\n          this.setState( { status: 'The network failed, please try again', loading: '' });\n        }\n        if(err.error === 'unknown')\n        {\n          this.setState( { status: 'An error occured, please try again', loading: '' });\n        }\n      });\n  }\n\n  handleDetailsToHomeClick = () => {\n    this.setState({\n      showDetails: false\n    })\n  };\n\n  handleWatchListToHomeButtonClick = () => {\n    this.setState({\n      showDetails: false,\n      showWatchList: false,\n      isEmptyMessage: '',\n    })\n  }\n\n  handleAddWatchListClick = (id, title) => {\n    const user = this.state.loggedInUser;\n    addToWatchList( id, user, title)\n      .then( () => {\n        this.setState( { status: ''});\n      })\n      .catch( err => {\n          if(err.error === 'network')\n          {\n            this.setState( { isAddedToWatchList: false, status: 'The network failed, please try again' });\n          }\n          if(err.error === 'unknown')\n          {\n            this.setState( { isAddedToWatchList: false, status: 'An error occured, please try again' });\n          }\n      });\n    this.setState({ isAddedToWatchList: true, status: '' });\n  }\n\n  handleRemoveWatchListClick = (id) => {\n    const user = this.state.loggedInUser;\n    removeFromWatchList( id, user)\n      .then( () => {\n        this.setState( { status: ''});\n      })\n      .catch( err => {\n          if(err.error === 'network')\n          {\n            this.setState( { isAddedToWatchList: true, status: 'The network failed, please try again' });\n          }\n          if(err.error === 'unknown')\n          {\n            this.setState( { isAddedToWatchList: true, status: 'An error occured, please try again' });\n          }\n      });\n    this.setState({ isAddedToWatchList: false, status: '' });\n  }\n\n  handleRemoveButtonClick = (id) => {\n    const user = this.state.loggedInUser;\n    this.setState({ loading: 'Loading...' }, () => {\n        removeFromWatchList( id, user)\n          .then( () => {\n            this.setState( { status: ''});\n          })\n          .catch( err => {\n              if(err.error === 'network')\n              {\n                this.setState( { status: 'The network failed, please try again', loading: '' });\n              }\n              if(err.error === 'unknown')\n              {\n                this.setState( { status: 'An error occured, please try again', loading: '' });\n              }\n          });\n       getWatchListForUser( user )\n          .then( WatchList => {\n            if(WatchList.length === 0)\n            {\n              this.setState({ watchList: WatchList, showWatchList: true, showDetails: false, isAddedToWatchList: false, isWatchListEmptyMessage: 'Watchlist is Empty', loading: '', status: '' });\n            }\n            else\n            {\n              this.setState({ watchList: WatchList, showWatchList: true, showDetails: false, isAddedToWatchList: false, isWatchListEmptyMessage: '', loading: '', status: '' });\n            }\n          })\n          .catch( err => {\n            if(err.error === 'network')\n            {\n              this.setState( { status: 'The network failed, please try again', loading: '' });\n            }\n            if(err.error === 'unknown')\n            {\n              this.setState( { status: 'An error occured, please try again', loading: '' });\n            }\n          });\n    })\n  }\n\n  handleWatchListButtonClick = () => {\n    const user = this.state.loggedInUser;\n    this.setState({ loading: 'Loading...' }, () => {\n      getWatchListForUser( user )\n        .then( userWatchList => {\n          if(userWatchList.length === 0)\n          {\n            this.setState({ watchList: userWatchList, showWatchList: true, showDetails: false, isWatchListEmptyMessage: 'Watchlist is Empty', loading: '', status: '' });\n          }\n          else\n          {\n            this.setState({ watchList: userWatchList, showWatchList: true, showDetails: false, isWatchListEmptyMessage: '', loading: '', status: '' });\n          }\n        })\n        .catch( err => {\n            if(err.error === 'network')\n            {\n              this.setState( { status: 'The network failed, please try again', loading: '' });\n            }\n            if(err.error === 'unknown')\n            {\n              this.setState( { status: 'An error occured, please try again', loading: '' });\n            }\n        });\n    })\n  }\n\n  handleLogoutClick = () => {\n    this.setState({ loggedIn: false, loggedInUser: '', movies: [] });\n  }\n\n  render() {\n      const showDetails = this.state.showDetails;\n      const loggedIn = this.state.loggedIn;\n      const showWatchList = this.state.showWatchList;\n\n      if(!loggedIn)\n      {\n        return(\n            <div className=\"loginPage\">\n              <Login onLoginButton={ this.handleLoginButton } onLogin={ this.handleLogin } disabled={ !this.state.loggedInUser } loggedInUser={ this.state.loggedInUser } />\n            </div>\n          )\n      }\n      if(!showDetails && loggedIn && !showWatchList)\n      {\n      let filter = this.state.movies.length ? \"filterVisible\" : \"filterNotVisible\";\n        return (\n          <div className=\"movieSearchResults\">\n            < MovieList movies={this.state.movies} user={this.state.loggedInUser} onEnter={this.handleKeyPress} onMoreInfoButtonClick={(movieId, user) => this.handleMoreInfoClick(movieId, user)} onWatchListButtonClick={this.handleWatchListButtonClick} onLogoutClick={this.handleLogoutClick} onFilter={this.handleFilter} class={ filter } isEmptyMessage={this.state.isEmptyMessage} loading={this.state.loading} status={this.state.status} /> \n          </div>\n        )\n\n      }\n      if(showDetails && loggedIn)\n      { \n        let watchListButton = this.state.isAddedToWatchList ? \"addedToWatchList\" : \"notAddedToWatchList\";\n        return (\n          <div className=\"movieSearchDetails\">\n           < MovieDetails movie={this.state.selectedMovie} details={this.state.details} onDetailsToHomeButtonClick={this.handleDetailsToHomeClick} onAddWatchListClick={(id, title) => this.handleAddWatchListClick(id, title)} onRemoveWatchListClick={(id) => this.handleRemoveWatchListClick(id)} class={watchListButton} removeDisabled={ !this.state.isAddedToWatchList } addDisabled={ this.state.isAddedToWatchList } status={this.state.status} loading={this.state.loading}/> \n          </div>\n        )\n      }\n      if(showWatchList && loggedIn)\n      {\n        return(\n          <div className=\"userWatchList\">\n            < WatchList list={this.state.watchList} onRemoveButtonClick={(id) =>this.handleRemoveButtonClick(id)} onWatchListToHomeButtonClick={this.handleWatchListToHomeButtonClick} isWatchListEmptyMessage={this.state.isWatchListEmptyMessage} loading={this.state.loading} status={this.state.status} /> \n          </div>\n        )\n      }\n    }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}